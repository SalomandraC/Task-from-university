#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int N = 26;
char s[N + 1];
vector<pair<int, int>> child;

bool comp(const pair<int, int>& a, const pair<int, int>& b);

int main() {
    cin >> s;
    for (int i = 0; i < N; ++i) {
        int c = s[i] - 'A';
        child.push_back(make_pair(i + 1, c));
    }

    sort(child.begin(), child.end(), comp);

    bool flag = true;
    int i = 0;
    for (const auto& p : child) {
        if (p.second < i) {
            flag = false;
            break;
        }
        i++;
    }

    if (!flag) {
        cout << "NO" << endl;
    }
    else {
        cout << "YES" << endl;
        for (const auto& p : child) {
            cout << p.first << " ";
        }
    }

    return 0;
}

bool comp(const pair<int, int>& a, const pair<int, int>& b) {
    return a.second < b.second;
}