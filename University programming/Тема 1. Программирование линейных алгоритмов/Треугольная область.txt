// 07.10.2023
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <cmath>
int main()
{
    //инициализация переменных
    int x1, x2, x3, y1, y2, y3;//координаты-целые значения
    double R1, R2, R3, S1, S2, S3, q1, q2, q3, q, p1, p2, p3;/*значения в треугольнике
    (R-расстояние от вершины до заданной точки
    S-длины сторон
    q-расстояние от заданной точки до стороны
    p-полуупериметр треугольника) - в формате double*/
    int x0, y0;
     
    //ввод
    scanf("%d %d %d %d %d %d", &x1, &y1, &x2, &y2, &x3, &y3);
    scanf("%d %d", &x0, &y0);
     
    R1 = sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));
    R2 = sqrt((x0 - x2) * (x0 - x2) + (y0 - y2) * (y0 - y2));
    R3 = sqrt((x0 - x3) * (x0 - x3) + (y0 - y3) * (y0 - y3));
  
    S1 = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
    S3 = sqrt((x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1));
    S2 = sqrt((x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2));
  
    p1 = (R1 + R2 + S1) / 2;
    p2 = (R1 + R3 + S3) / 2;
    p3 = (R2 + R3 + S2) / 2;
  
    q1 = 2 * sqrt(p1 * (p1 - R1) * (p1 - S1) * (p1 - R2)) / S1;
    q2 = 2 * sqrt(p2 * (p2 - R1) * (p2 - S3) * (p2 - R3)) / S3;
    q3 = 2 * sqrt(p3 * (p3 - R2) * (p3 - S2) * (p3 - R3)) / S2;
  
    //находим наименьшее расстояние
    q = (q1 < q2 && q1 < q3) ? q1 : (q2 < q1 && q2 < q3) ? q2 : q3;
    //погрешность
    q -= 0.0000001;
     
    //вывод
    printf("%.7lf", q);
  
    return 0;
}